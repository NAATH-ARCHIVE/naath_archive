version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    container_name: naath-archive-db
    environment:
      POSTGRES_DB: naatharchive
      POSTGRES_USER: naathuser
      POSTGRES_PASSWORD: naathpassword
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./database/seeds/initial_data.sql:/docker-entrypoint-initdb.d/02-seed-data.sql
    networks:
      - naath-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U naathuser -d naatharchive"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build: ./backend
    container_name: naath-archive-backend
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: naatharchive
      DB_USER: naathuser
      DB_PASSWORD: naathpassword
      JWT_SECRET: your-super-secret-jwt-key-here
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
      CORS_ORIGIN: http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    networks:
      - naath-network
    restart: unless-stopped

  # Frontend React App
  frontend:
    build: ./frontend
    container_name: naath-archive-frontend
    ports:
      - "3000:3000"
    environment:
      REACT_APP_API_URL: http://localhost:3001/api
      REACT_APP_ENVIRONMENT: development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - naath-network
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: naath-archive-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - naath-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  naath-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
